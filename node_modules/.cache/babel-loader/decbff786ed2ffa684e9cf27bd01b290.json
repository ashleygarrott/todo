{"remainingRequest":"D:\\IT\\MUIC\\rapid\\Todo\\node_modules\\babel-loader\\lib\\index.js!D:\\IT\\MUIC\\rapid\\Todo\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\IT\\MUIC\\rapid\\Todo\\src\\auth\\authGuard.js","dependencies":[{"path":"D:\\IT\\MUIC\\rapid\\Todo\\src\\auth\\authGuard.js","mtime":1597638177888},{"path":"D:\\IT\\MUIC\\rapid\\Todo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IT\\MUIC\\rapid\\Todo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IT\\MUIC\\rapid\\Todo\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { getInstance } from \"./authWrapper\";\nexport var authGuard = function authGuard(to, from, next) {\n  var authService = getInstance();\n\n  var fn = function fn() {\n    if (authService.isAuthenticated) {\n      return next();\n    }\n\n    authService.loginWithRedirect({\n      appState: {\n        targetUrl: to.fullPath\n      }\n    });\n  };\n\n  if (!authService.loading) {\n    return fn();\n  }\n\n  authService.$watch(\"loading\", function (loading) {\n    if (loading === false) {\n      return fn();\n    }\n  });\n};",{"version":3,"sources":["D:/IT/MUIC/rapid/Todo/src/auth/authGuard.js"],"names":["getInstance","authGuard","to","from","next","authService","fn","isAuthenticated","loginWithRedirect","appState","targetUrl","fullPath","loading","$watch"],"mappings":"AAAA,SAASA,WAAT;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AAC3C,MAAMC,WAAW,GAAGL,WAAW,EAA/B;;AAEA,MAAMM,EAAE,GAAG,SAALA,EAAK,GAAM;AACf,QAAID,WAAW,CAACE,eAAhB,EAAiC;AAC/B,aAAOH,IAAI,EAAX;AACD;;AAEDC,IAAAA,WAAW,CAACG,iBAAZ,CAA8B;AAAEC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,SAAS,EAAER,EAAE,CAACS;AAAhB;AAAZ,KAA9B;AACD,GAND;;AAQA,MAAI,CAACN,WAAW,CAACO,OAAjB,EAA0B;AACxB,WAAON,EAAE,EAAT;AACD;;AAEDD,EAAAA,WAAW,CAACQ,MAAZ,CAAmB,SAAnB,EAA8B,UAAAD,OAAO,EAAI;AACvC,QAAIA,OAAO,KAAK,KAAhB,EAAuB;AACrB,aAAON,EAAE,EAAT;AACD;AACF,GAJD;AAKD,CApBM","sourcesContent":["import { getInstance } from \"./authWrapper\";\n\nexport const authGuard = (to, from, next) => {\n  const authService = getInstance();\n\n  const fn = () => {\n    if (authService.isAuthenticated) {\n      return next();\n    }\n\n    authService.loginWithRedirect({ appState: { targetUrl: to.fullPath } });\n  };\n\n  if (!authService.loading) {\n    return fn();\n  }\n\n  authService.$watch(\"loading\", loading => {\n    if (loading === false) {\n      return fn();\n    }\n  });\n};\n"]}]}