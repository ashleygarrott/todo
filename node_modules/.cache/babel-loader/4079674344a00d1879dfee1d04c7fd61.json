{"remainingRequest":"D:\\IT\\MUIC\\rapid\\customer\\node_modules\\babel-loader\\lib\\index.js!D:\\IT\\MUIC\\rapid\\customer\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\IT\\MUIC\\rapid\\customer\\src\\store\\index.js","dependencies":[{"path":"D:\\IT\\MUIC\\rapid\\customer\\src\\store\\index.js","mtime":1613589231622},{"path":"D:\\IT\\MUIC\\rapid\\customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IT\\MUIC\\rapid\\customer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IT\\MUIC\\rapid\\customer\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    dialog: false,\n    tasks: [{\n      id: 0,\n      text: \"first item\",\n      date: \"\",\n      time: \"\",\n      subTasks: [{\n        text: \"sub-task 1\",\n        date: \"\",\n        time: \"\",\n        done: false\n      }, {\n        text: \"sub-task 2\",\n        date: \"\",\n        time: \"\",\n        done: false\n      }],\n      completeness: 10,\n      done: true\n    }, {\n      id: 1,\n      text: \"second item\",\n      date: \"\",\n      time: \"\",\n      subTasks: [{\n        id: 0,\n        text: \"sub-task 1\",\n        date: \"\",\n        time: \"\",\n        done: false\n      }, {\n        id: 1,\n        text: \"sub-task 2\",\n        date: \"\",\n        time: \"\",\n        done: false\n      }],\n      completeness: 0,\n      done: false\n    }]\n  },\n  getters: {\n    getAllTasks: function getAllTasks(state) {\n      return state.tasks;\n    },\n    getFinishedTasks: function getFinishedTasks(state) {\n      return state.tasks.filter(function (task) {\n        return task.done;\n      });\n    },\n    getDialogState: function getDialogState(state) {\n      return state.dialog;\n    }\n  },\n  mutations: {\n    addTask: function addTask(state, payload) {\n      payload.id = state.tasks.length;\n      state.tasks.push(payload);\n    },\n    addSubTask: function addSubTask(state, payload) {\n      payload.subTask.id = payload.task.subTasks.length;\n      payload.task.subTasks.push(payload.subTask);\n      var count = 0;\n\n      for (var i = 0; i < payload.task.subTasks.length; i++) {\n        if (payload.task.subTask.done) {\n          count++;\n        }\n      }\n\n      payload.task.completeness = Math.round(count / payload.task.subTasks.length);\n    },\n    addDate: function addDate(state, payload) {\n      payload.task.date = payload.date;\n    },\n    deleteTask: function deleteTask(state, task) {\n      state.tasks.splice(task.id, 1);\n\n      for (var i = 0; i < state.tasks.length; i++) {\n        state.tasks[i].id = i;\n      }\n    },\n    deleteSubTask: function deleteSubTask(state, payload) {\n      state.tasks[payload.task.id].subTasks.splice(payload.subTask.id, 1);\n\n      for (var i = 0; i < state.tasks[payload.task.id].subTasks.length; i++) {\n        state.tasks[payload.task.id].subTasks[i].id = i;\n      }\n\n      var count = 0;\n\n      for (var i = 0; i < payload.task.subTasks.length; i++) {\n        if (payload.task.subTask.done) {\n          count++;\n        }\n      }\n\n      payload.task.completeness = Math.round(count / payload.task.subTasks.length); // if(state.tasks[payload.task.id].subTasks.length == 0){\n      //     state.tasks.splice(payload.task.id, 1)\n      //     for (var i=0;i<state.tasks.length;i++){\n      //         state.tasks[i].id = i\n      //     }\n      // }\n\n      state.dialog = false;\n    },\n    markTaskDone: function markTaskDone(state, task) {\n      task.done = true;\n    },\n    markSubTaskDone: function markSubTaskDone(state, payload) {\n      payload.subTask.done = true;\n      var res = true;\n\n      for (var i = 0; i < payload.task.subTasks.length; i++) {\n        res = res * payload.task.subTasks[i].done;\n      }\n\n      if (res) {\n        payload.task.done = true;\n      }\n\n      var count = 0;\n\n      for (var i = 0; i < payload.task.subTasks.length; i++) {\n        if (payload.task.subTask.done) {\n          count++;\n        }\n      }\n\n      payload.task.completeness = Math.round(count / payload.task.subTasks.length);\n    }\n  },\n  actions: {// addTask(context, payload){\n    //     context.commit('addTask', payload)\n    // }\n  },\n  modules: {}\n});",{"version":3,"sources":["D:/IT/MUIC/rapid/customer/src/store/index.js"],"names":["Vue","Vuex","use","Store","state","dialog","tasks","id","text","date","time","subTasks","done","completeness","getters","getAllTasks","getFinishedTasks","filter","task","getDialogState","mutations","addTask","payload","length","push","addSubTask","subTask","count","i","Math","round","addDate","deleteTask","splice","deleteSubTask","markTaskDone","markSubTaskDone","res","actions","modules"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC1BC,EAAAA,KAAK,EAAC;AACFC,IAAAA,MAAM,EAAE,KADN;AAEFC,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAE,YAFV;AAGIC,MAAAA,IAAI,EAAE,EAHV;AAIIC,MAAAA,IAAI,EAAE,EAJV;AAKIC,MAAAA,QAAQ,EAAE,CACN;AACIH,QAAAA,IAAI,EAAE,YADV;AAEIC,QAAAA,IAAI,EAAE,EAFV;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIE,QAAAA,IAAI,EAAE;AAJV,OADM,EAON;AACIJ,QAAAA,IAAI,EAAE,YADV;AAEIC,QAAAA,IAAI,EAAE,EAFV;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIE,QAAAA,IAAI,EAAE;AAJV,OAPM,CALd;AAmBIC,MAAAA,YAAY,EAAE,EAnBlB;AAoBID,MAAAA,IAAI,EAAE;AApBV,KADG,EAuBH;AACIL,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,IAAI,EAAE,aAFV;AAGIC,MAAAA,IAAI,EAAE,EAHV;AAIIC,MAAAA,IAAI,EAAE,EAJV;AAKIC,MAAAA,QAAQ,EAAE,CACN;AACIJ,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,IAAI,EAAE,YAFV;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,IAAI,EAAE,EAJV;AAKIE,QAAAA,IAAI,EAAE;AALV,OADM,EAQN;AACIL,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,IAAI,EAAE,YAFV;AAGIC,QAAAA,IAAI,EAAE,EAHV;AAIIC,QAAAA,IAAI,EAAE,EAJV;AAKIE,QAAAA,IAAI,EAAE;AALV,OARM,CALd;AAqBIC,MAAAA,YAAY,EAAE,CArBlB;AAsBID,MAAAA,IAAI,EAAE;AAtBV,KAvBG;AAFL,GADoB;AAsD1BE,EAAAA,OAAO,EAAE;AACLC,IAAAA,WAAW,EAAE,qBAAAX,KAAK,EAAI;AAClB,aAAOA,KAAK,CAACE,KAAb;AACH,KAHI;AAILU,IAAAA,gBAAgB,EAAE,0BAAAZ,KAAK,EAAI;AACvB,aAAOA,KAAK,CAACE,KAAN,CAAYW,MAAZ,CAAmB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACN,IAAT;AAAA,OAAvB,CAAP;AACH,KANI;AAOLO,IAAAA,cAAc,EAAE,wBAAAf,KAAK,EAAI;AACrB,aAAOA,KAAK,CAACC,MAAb;AACH;AATI,GAtDiB;AAiE1Be,EAAAA,SAAS,EAAE;AACPC,IAAAA,OADO,mBACCjB,KADD,EACQkB,OADR,EACgB;AACnBA,MAAAA,OAAO,CAACf,EAAR,GAAaH,KAAK,CAACE,KAAN,CAAYiB,MAAzB;AACAnB,MAAAA,KAAK,CAACE,KAAN,CAAYkB,IAAZ,CAAiBF,OAAjB;AACH,KAJM;AAKPG,IAAAA,UALO,sBAKIrB,KALJ,EAKWkB,OALX,EAKmB;AACtBA,MAAAA,OAAO,CAACI,OAAR,CAAgBnB,EAAhB,GAAqBe,OAAO,CAACJ,IAAR,CAAaP,QAAb,CAAsBY,MAA3C;AACAD,MAAAA,OAAO,CAACJ,IAAR,CAAaP,QAAb,CAAsBa,IAAtB,CAA2BF,OAAO,CAACI,OAAnC;AACA,UAAIC,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACN,OAAO,CAACJ,IAAR,CAAaP,QAAb,CAAsBY,MAArC,EAA4CK,CAAC,EAA7C,EAAgD;AAC5C,YAAIN,OAAO,CAACJ,IAAR,CAAaQ,OAAb,CAAqBd,IAAzB,EAA8B;AAC1Be,UAAAA,KAAK;AACR;AACJ;;AACDL,MAAAA,OAAO,CAACJ,IAAR,CAAaL,YAAb,GAA4BgB,IAAI,CAACC,KAAL,CAAWH,KAAK,GAACL,OAAO,CAACJ,IAAR,CAAaP,QAAb,CAAsBY,MAAvC,CAA5B;AAEH,KAhBM;AAiBPQ,IAAAA,OAjBO,mBAiBC3B,KAjBD,EAiBQkB,OAjBR,EAiBgB;AACnBA,MAAAA,OAAO,CAACJ,IAAR,CAAaT,IAAb,GAAoBa,OAAO,CAACb,IAA5B;AACH,KAnBM;AAoBPuB,IAAAA,UApBO,sBAoBI5B,KApBJ,EAoBWc,IApBX,EAoBgB;AACnBd,MAAAA,KAAK,CAACE,KAAN,CAAY2B,MAAZ,CAAmBf,IAAI,CAACX,EAAxB,EAA4B,CAA5B;;AAEA,WAAK,IAAIqB,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACxB,KAAK,CAACE,KAAN,CAAYiB,MAA3B,EAAkCK,CAAC,EAAnC,EAAsC;AAClCxB,QAAAA,KAAK,CAACE,KAAN,CAAYsB,CAAZ,EAAerB,EAAf,GAAoBqB,CAApB;AACH;AACJ,KA1BM;AA2BPM,IAAAA,aA3BO,yBA2BO9B,KA3BP,EA2BckB,OA3Bd,EA2BsB;AACzBlB,MAAAA,KAAK,CAACE,KAAN,CAAYgB,OAAO,CAACJ,IAAR,CAAaX,EAAzB,EAA6BI,QAA7B,CAAsCsB,MAAtC,CAA6CX,OAAO,CAACI,OAAR,CAAgBnB,EAA7D,EAAiE,CAAjE;;AAEA,WAAK,IAAIqB,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACxB,KAAK,CAACE,KAAN,CAAYgB,OAAO,CAACJ,IAAR,CAAaX,EAAzB,EAA6BI,QAA7B,CAAsCY,MAArD,EAA4DK,CAAC,EAA7D,EAAgE;AAC5DxB,QAAAA,KAAK,CAACE,KAAN,CAAYgB,OAAO,CAACJ,IAAR,CAAaX,EAAzB,EAA6BI,QAA7B,CAAsCiB,CAAtC,EAAyCrB,EAAzC,GAA8CqB,CAA9C;AACH;;AAED,UAAID,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACN,OAAO,CAACJ,IAAR,CAAaP,QAAb,CAAsBY,MAArC,EAA4CK,CAAC,EAA7C,EAAgD;AAC5C,YAAIN,OAAO,CAACJ,IAAR,CAAaQ,OAAb,CAAqBd,IAAzB,EAA8B;AAC1Be,UAAAA,KAAK;AACR;AACJ;;AACDL,MAAAA,OAAO,CAACJ,IAAR,CAAaL,YAAb,GAA4BgB,IAAI,CAACC,KAAL,CAAWH,KAAK,GAACL,OAAO,CAACJ,IAAR,CAAaP,QAAb,CAAsBY,MAAvC,CAA5B,CAbyB,CAezB;AACA;AACA;AACA;AACA;AACA;;AAEAnB,MAAAA,KAAK,CAACC,MAAN,GAAe,KAAf;AACH,KAlDM;AAmDP8B,IAAAA,YAnDO,wBAmDM/B,KAnDN,EAmDac,IAnDb,EAmDkB;AACrBA,MAAAA,IAAI,CAACN,IAAL,GAAY,IAAZ;AACH,KArDM;AAsDPwB,IAAAA,eAtDO,2BAsDShC,KAtDT,EAsDgBkB,OAtDhB,EAsDwB;AAC3BA,MAAAA,OAAO,CAACI,OAAR,CAAgBd,IAAhB,GAAuB,IAAvB;AACA,UAAIyB,GAAG,GAAG,IAAV;;AACA,WAAK,IAAIT,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACN,OAAO,CAACJ,IAAR,CAAaP,QAAb,CAAsBY,MAArC,EAA4CK,CAAC,EAA7C,EAAgD;AAC5CS,QAAAA,GAAG,GAAGA,GAAG,GAAGf,OAAO,CAACJ,IAAR,CAAaP,QAAb,CAAsBiB,CAAtB,EAAyBhB,IAArC;AACH;;AAED,UAAIyB,GAAJ,EAAQ;AACJf,QAAAA,OAAO,CAACJ,IAAR,CAAaN,IAAb,GAAoB,IAApB;AACH;;AAED,UAAIe,KAAK,GAAG,CAAZ;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACN,OAAO,CAACJ,IAAR,CAAaP,QAAb,CAAsBY,MAArC,EAA4CK,CAAC,EAA7C,EAAgD;AAC5C,YAAIN,OAAO,CAACJ,IAAR,CAAaQ,OAAb,CAAqBd,IAAzB,EAA8B;AAC1Be,UAAAA,KAAK;AACR;AACJ;;AACDL,MAAAA,OAAO,CAACJ,IAAR,CAAaL,YAAb,GAA4BgB,IAAI,CAACC,KAAL,CAAWH,KAAK,GAACL,OAAO,CAACJ,IAAR,CAAaP,QAAb,CAAsBY,MAAvC,CAA5B;AACH;AAxEM,GAjEe;AA2I1Be,EAAAA,OAAO,EAAE,CACL;AACA;AACA;AAHK,GA3IiB;AAgJ1BC,EAAAA,OAAO,EAAE;AAhJiB,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\n\r\nVue.use(Vuex);\r\n\r\nexport default new Vuex.Store({\r\n    state:{\r\n        dialog: false,\r\n        tasks: [\r\n            {\r\n                id: 0,\r\n                text: \"first item\",\r\n                date: \"\",\r\n                time: \"\",\r\n                subTasks: [\r\n                    {\r\n                        text: \"sub-task 1\",\r\n                        date: \"\",\r\n                        time: \"\",\r\n                        done: false\r\n                    },\r\n                    {\r\n                        text: \"sub-task 2\",\r\n                        date: \"\",\r\n                        time: \"\",\r\n                        done: false\r\n                    }\r\n                ],\r\n                completeness: 10,\r\n                done: true\r\n            },\r\n            {\r\n                id: 1,\r\n                text: \"second item\",\r\n                date: \"\",\r\n                time: \"\",\r\n                subTasks: [\r\n                    {\r\n                        id: 0,\r\n                        text: \"sub-task 1\",\r\n                        date: \"\",\r\n                        time: \"\",\r\n                        done: false\r\n                    },\r\n                    {\r\n                        id: 1,\r\n                        text: \"sub-task 2\",\r\n                        date: \"\",\r\n                        time: \"\",\r\n                        done: false\r\n                    }\r\n                ],\r\n                completeness: 0,\r\n                done: false\r\n            }\r\n          \r\n            \r\n        ]\r\n    },\r\n    getters: {\r\n        getAllTasks: state => {\r\n            return state.tasks\r\n        },\r\n        getFinishedTasks: state => {\r\n            return state.tasks.filter(task => task.done)\r\n        },\r\n        getDialogState: state => {\r\n            return state.dialog\r\n        }\r\n    },\r\n    mutations: {\r\n        addTask(state, payload){\r\n            payload.id = state.tasks.length\r\n            state.tasks.push(payload)\r\n        },\r\n        addSubTask(state, payload){\r\n            payload.subTask.id = payload.task.subTasks.length\r\n            payload.task.subTasks.push(payload.subTask)\r\n            var count = 0\r\n            for (var i=0;i<payload.task.subTasks.length;i++){\r\n                if (payload.task.subTask.done){\r\n                    count++\r\n                }\r\n            }\r\n            payload.task.completeness = Math.round(count/payload.task.subTasks.length)\r\n\r\n        },\r\n        addDate(state, payload){\r\n            payload.task.date = payload.date\r\n        },\r\n        deleteTask(state, task){\r\n            state.tasks.splice(task.id, 1)\r\n\r\n            for (var i=0;i<state.tasks.length;i++){\r\n                state.tasks[i].id = i\r\n            }\r\n        },\r\n        deleteSubTask(state, payload){\r\n            state.tasks[payload.task.id].subTasks.splice(payload.subTask.id, 1)\r\n\r\n            for (var i=0;i<state.tasks[payload.task.id].subTasks.length;i++){\r\n                state.tasks[payload.task.id].subTasks[i].id = i\r\n            }\r\n\r\n            var count = 0\r\n            for (var i=0;i<payload.task.subTasks.length;i++){\r\n                if (payload.task.subTask.done){\r\n                    count++\r\n                }\r\n            }\r\n            payload.task.completeness = Math.round(count/payload.task.subTasks.length)\r\n\r\n            // if(state.tasks[payload.task.id].subTasks.length == 0){\r\n            //     state.tasks.splice(payload.task.id, 1)\r\n            //     for (var i=0;i<state.tasks.length;i++){\r\n            //         state.tasks[i].id = i\r\n            //     }\r\n            // }\r\n\r\n            state.dialog = false;\r\n        },\r\n        markTaskDone(state, task){\r\n            task.done = true\r\n        },\r\n        markSubTaskDone(state, payload){\r\n            payload.subTask.done = true\r\n            var res = true\r\n            for (var i=0;i<payload.task.subTasks.length;i++){\r\n                res = res * payload.task.subTasks[i].done\r\n            }\r\n\r\n            if (res){\r\n                payload.task.done = true\r\n            }\r\n\r\n            var count = 0\r\n            for (var i=0;i<payload.task.subTasks.length;i++){\r\n                if (payload.task.subTask.done){\r\n                    count++\r\n                }\r\n            }\r\n            payload.task.completeness = Math.round(count/payload.task.subTasks.length)\r\n        }\r\n    },\r\n    actions: {\r\n        // addTask(context, payload){\r\n        //     context.commit('addTask', payload)\r\n        // }\r\n    },\r\n    modules: {}\r\n});"]}]}