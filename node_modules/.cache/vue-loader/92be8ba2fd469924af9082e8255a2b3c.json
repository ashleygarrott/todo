{"remainingRequest":"D:\\IT\\CapriApp\\frontend\\customer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IT\\CapriApp\\frontend\\customer\\src\\views\\OpenOrders.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\IT\\CapriApp\\frontend\\customer\\src\\views\\OpenOrders.vue","mtime":1609344799491},{"path":"D:\\IT\\CapriApp\\frontend\\customer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\IT\\CapriApp\\frontend\\customer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IT\\CapriApp\\frontend\\customer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n    name: \"OpenOrders\",\r\n    data (){\r\n        return {\r\n            config: {\r\n                    headers: { \r\n                    'Authorization': \"Bearer \" + this.$parent.accessToken,\r\n                    'Access-Control-Allow-Origin': '*'\r\n\r\n                    }\r\n            },\r\n            orders: [\r\n                {\r\n                    address: \"\",\r\n                    latitude: 0.0,\r\n                    locationNotes: \"\",\r\n                    longitude: 0.0,\r\n                    orderId: \"\",\r\n                    orderPrice: 0,\r\n                    orderTime: \"\",\r\n                    orderType: \"\",\r\n                    status: \"\",\r\n                    phoneNumber: \"\",\r\n                    orders: [\r\n                        {\r\n                            menuId: 0,\r\n                            menuName: \"\",\r\n                            menuPrice: 0,\r\n                            optionString: \"\",\r\n                            options: [],\r\n                            quantity: 0\r\n                        }\r\n                    ],\r\n                    userId: \"\"\r\n                }\r\n            ]\r\n\r\n        }\r\n    },\r\n    created(){\r\n        window.console.log(\"access token: \" + this.$parent.accessToken)\r\n        this.getOrders()\r\n        this.$alert(\"Click OK\");\r\n        \r\n        // this.axios.defaults.headers.common['Authorization'] = 'Bearer ' + this.$parent.token;\r\n        // this.axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*'\r\n\r\n    },\r\n    mounted(){\r\n      \r\n    },\r\n\r\n    methods: {\r\n        \r\n        getOrders(){\r\n            this.axios.get(this.$parent.api + 'order/get_daily_orders', this.$parent.config)\r\n            .then(res => {\r\n                this.orders = res.data\r\n                for (var i=0;i<this.orders.length;i++){\r\n                    this.orders[i].response = \"\"\r\n                }\r\n                this.refresh()\r\n                window.console.log(\"token valid\")\r\n            })\r\n            .catch(() => {\r\n                this.refreshToken();\r\n\r\n                });\r\n            \r\n        },\r\n        updateConfig(){\r\n            this.config = {\r\n                    headers: { \r\n                    'Authorization': \"Bearer \" + this.$parent.accessToken,\r\n                    'Access-Control-Allow-Origin': '*'\r\n\r\n                    }\r\n            }\r\n        },\r\n        redirectLogin(){\r\n            window.console.log(\"redirecting to login\")\r\n            this.$router.push({name: \"login\"})\r\n            window.clearInterval(this.loop)\r\n        },\r\n        refreshToken(){\r\n            window.console.log(this.$parent.refresherToken)\r\n            window.clearInterval(this.loop)\r\n            this.axios.post(this.$parent.api + 'authenticate/token', {\r\n                string: this.$parent.refresherToken\r\n\r\n            })\r\n            .then(res => {\r\n                window.console.log(res.data)\r\n                this.accessToken = res.data.accessToken\r\n                window.localStorage.setItem(\"accessToken\", res.data.accessToken)\r\n                this.updateConfig()\r\n                this.axios.get(this.$parent.api + 'order/get_daily_orders', this.$parent.config)\r\n                .then(res => {\r\n                    this.orders = res.data\r\n                    for (var i=0;i<this.orders.length;i++){\r\n                        this.orders[i].response = \"\"\r\n                    }\r\n                    this.refresh()\r\n                    window.console.log(\"refresh successful\")\r\n                })\r\n                .catch(() => {\r\n                    this.redirectLogin();\r\n                });\r\n            })\r\n            .catch(() => {\r\n                window.console.log(\"GetNewAccessToken failed\")\r\n                this.$router.push({name: \"login\"})\r\n                });\r\n\r\n\r\n            \r\n        },\r\n        refresh: function(){\r\n            this.loop = \r\n                window.setInterval(() => {\r\n                    window.console.log(this.$parent.accessToken)\r\n                    var length = this.orders.length\r\n                    this.axios.get(this.$parent.api + 'order/get_daily_orders', this.$parent.config)\r\n                    .then(res => {\r\n                        this.orders = res.data\r\n                        for (var i=0;i<this.orders.length;i++){\r\n                            this.orders[i].response = \"\"\r\n                        }\r\n                        if (this.orders.length > length) {\r\n                            window.console.log(\"new order\")\r\n                            var audioFile = new Audio('/sounds/notif.mp3');\r\n                            audioFile.play();\r\n                        }\r\n                    })\r\n                    .catch(() => {\r\n                        window.console.log(\"calling refresh token\")\r\n                        this.refreshToken()\r\n                    });\r\n                \r\n                \r\n                }, 5000)\r\n        },\r\n        selectOrder(orderId){\r\n            window.clearInterval(this.loop)\r\n            this.$router.push({ name: 'orderDetails', params: { orderId: orderId }})\r\n\r\n        }\r\n\r\n\r\n    }\r\n}\r\n",{"version":3,"sources":["OpenOrders.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"OpenOrders.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n\r\n    <div>\r\n        <div class=\"fixed-top darkBackground mt-0\">\r\n            <p class=\"text-center my-auto\" style=\"color:white\">Today's orders</p>\r\n        </div>\r\n        <div class=\"container flex-grow-1 bodyArea\">\r\n                    <div v-if=\"orders.length < 1\">\r\n                        There are currently no open orders\r\n                    </div>\r\n                    <div class=\"row\" v-if=\"orders.length > 0\" >\r\n                        <div class=\"card\" style=\"width:100%\">\r\n                            <ul class=\"list-group list-group-flush\">\r\n                                <div class=\"list-group-item\" v-for=\"(order, index) in orders\" :key=\"index\">\r\n                                    <!-- <router-link :to=\"{ name: 'orderDetails', params: { orderId: order.orderId }}\"> -->\r\n                                        <div class=\"row\" v-on:click=\"selectOrder(order.orderId)\">\r\n                                            <div class = \"col-2 px-1\">\r\n                                                <p class=\"titleText text-dark\">{{order.orderTime}}</p>\r\n                                            </div>\r\n                                            <div class = \"col-2 px-1\">\r\n                                                <p class=\"titleText text-dark\">{{order.orderType}}</p>\r\n                                            </div>\r\n                                            <div class = \"col-5 px-1\">\r\n                                                <div class=\"row\" v-for=\"(item, index) in order.orders\" :key=\"index\">\r\n                                                    <div class=\"col-8\">\r\n                                                        <p class=\"text-secondary titleText text-center\">{{item.menuName}}</p>\r\n                                                    </div>\r\n                                                    <div class=\"col-4\">\r\n                                                        <p class=\"text-secondary titleText text-center\">x{{item.quantity}}</p>\r\n                                                    </div>  \r\n                                                </div>\r\n                                            </div>\r\n                                            <div class = \"col-3 pl-1\">\r\n                                                <p v-if=\"order.status=='unconfirmed'\" class=\"titleText text-warning text-center\"><b>{{order.status}}</b></p>\r\n                                                <p v-if=\"order.status=='confirmed'\" class=\"titleText text-success\"><b>{{order.status}}</b></p>\r\n                                                <p v-if=\"order.status=='canceled'\" class=\"titleText text-danger\"><b>{{order.status}}</b></p>\r\n                                            </div>\r\n                                        </div>\r\n                                    <!-- </router-link> -->\r\n                                    <div v-if=\"order.status=='unconfirmed'\" :key=\"order.status\" class=\"row\"> \r\n                                        <div class=\"col-6\">\r\n                                            <button v-on:click=\"$parent.acceptOrder(order)\" type=\"button\" class=\"btn btn-success btn-block\">Accept</button>\r\n                                        </div>\r\n                                        <div class=\"col-6\">\r\n                                            <button v-on:click=\"$parent.declineOrder(order)\" type=\"button\" class=\"btn btn-danger btn-block\">Decline</button> \r\n                                        </div>\r\n                                    </div>\r\n                                    <hr>\r\n                                </div>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n            </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: \"OpenOrders\",\r\n    data (){\r\n        return {\r\n            config: {\r\n                    headers: { \r\n                    'Authorization': \"Bearer \" + this.$parent.accessToken,\r\n                    'Access-Control-Allow-Origin': '*'\r\n\r\n                    }\r\n            },\r\n            orders: [\r\n                {\r\n                    address: \"\",\r\n                    latitude: 0.0,\r\n                    locationNotes: \"\",\r\n                    longitude: 0.0,\r\n                    orderId: \"\",\r\n                    orderPrice: 0,\r\n                    orderTime: \"\",\r\n                    orderType: \"\",\r\n                    status: \"\",\r\n                    phoneNumber: \"\",\r\n                    orders: [\r\n                        {\r\n                            menuId: 0,\r\n                            menuName: \"\",\r\n                            menuPrice: 0,\r\n                            optionString: \"\",\r\n                            options: [],\r\n                            quantity: 0\r\n                        }\r\n                    ],\r\n                    userId: \"\"\r\n                }\r\n            ]\r\n\r\n        }\r\n    },\r\n    created(){\r\n        window.console.log(\"access token: \" + this.$parent.accessToken)\r\n        this.getOrders()\r\n        this.$alert(\"Click OK\");\r\n        \r\n        // this.axios.defaults.headers.common['Authorization'] = 'Bearer ' + this.$parent.token;\r\n        // this.axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*'\r\n\r\n    },\r\n    mounted(){\r\n      \r\n    },\r\n\r\n    methods: {\r\n        \r\n        getOrders(){\r\n            this.axios.get(this.$parent.api + 'order/get_daily_orders', this.$parent.config)\r\n            .then(res => {\r\n                this.orders = res.data\r\n                for (var i=0;i<this.orders.length;i++){\r\n                    this.orders[i].response = \"\"\r\n                }\r\n                this.refresh()\r\n                window.console.log(\"token valid\")\r\n            })\r\n            .catch(() => {\r\n                this.refreshToken();\r\n\r\n                });\r\n            \r\n        },\r\n        updateConfig(){\r\n            this.config = {\r\n                    headers: { \r\n                    'Authorization': \"Bearer \" + this.$parent.accessToken,\r\n                    'Access-Control-Allow-Origin': '*'\r\n\r\n                    }\r\n            }\r\n        },\r\n        redirectLogin(){\r\n            window.console.log(\"redirecting to login\")\r\n            this.$router.push({name: \"login\"})\r\n            window.clearInterval(this.loop)\r\n        },\r\n        refreshToken(){\r\n            window.console.log(this.$parent.refresherToken)\r\n            window.clearInterval(this.loop)\r\n            this.axios.post(this.$parent.api + 'authenticate/token', {\r\n                string: this.$parent.refresherToken\r\n\r\n            })\r\n            .then(res => {\r\n                window.console.log(res.data)\r\n                this.accessToken = res.data.accessToken\r\n                window.localStorage.setItem(\"accessToken\", res.data.accessToken)\r\n                this.updateConfig()\r\n                this.axios.get(this.$parent.api + 'order/get_daily_orders', this.$parent.config)\r\n                .then(res => {\r\n                    this.orders = res.data\r\n                    for (var i=0;i<this.orders.length;i++){\r\n                        this.orders[i].response = \"\"\r\n                    }\r\n                    this.refresh()\r\n                    window.console.log(\"refresh successful\")\r\n                })\r\n                .catch(() => {\r\n                    this.redirectLogin();\r\n                });\r\n            })\r\n            .catch(() => {\r\n                window.console.log(\"GetNewAccessToken failed\")\r\n                this.$router.push({name: \"login\"})\r\n                });\r\n\r\n\r\n            \r\n        },\r\n        refresh: function(){\r\n            this.loop = \r\n                window.setInterval(() => {\r\n                    window.console.log(this.$parent.accessToken)\r\n                    var length = this.orders.length\r\n                    this.axios.get(this.$parent.api + 'order/get_daily_orders', this.$parent.config)\r\n                    .then(res => {\r\n                        this.orders = res.data\r\n                        for (var i=0;i<this.orders.length;i++){\r\n                            this.orders[i].response = \"\"\r\n                        }\r\n                        if (this.orders.length > length) {\r\n                            window.console.log(\"new order\")\r\n                            var audioFile = new Audio('/sounds/notif.mp3');\r\n                            audioFile.play();\r\n                        }\r\n                    })\r\n                    .catch(() => {\r\n                        window.console.log(\"calling refresh token\")\r\n                        this.refreshToken()\r\n                    });\r\n                \r\n                \r\n                }, 5000)\r\n        },\r\n        selectOrder(orderId){\r\n            window.clearInterval(this.loop)\r\n            this.$router.push({ name: 'orderDetails', params: { orderId: orderId }})\r\n\r\n        }\r\n\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n        \r\n    .titleText {\r\n        font-size:0.7rem;\r\n    }\r\n\r\n    .contentText {\r\n        font-size:0.7rem;\r\n        color:green;\r\n    }\r\n\r\n    .buttons {\r\n        font-size: 1rem;\r\n    }\r\n</style>"]}]}